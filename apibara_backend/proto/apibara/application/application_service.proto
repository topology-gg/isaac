syntax = "proto3";

import "google/protobuf/timestamp.proto";

package apibara.application.v1alpha1;

service ApplicationManager {
  rpc CreateApplication(CreateApplicationRequest) returns (CreateApplicationResponse);
  rpc GetApplication(GetApplicationRequest) returns (GetApplicationResponse);
  rpc ListApplication(ListApplicationRequest) returns (ListApplicationResponse);
  rpc DeleteApplication(DeleteApplicationRequest) returns (DeleteApplicationResponse);

  rpc ConnectIndexer(stream ConnectIndexerRequest) returns (stream ConnectIndexerResponse);
}

// Represent the application's state.
message Application {
  // The unique application id.
  string id = 1;
  // The latest block the application inedxed.
  optional uint64 indexed_to_block = 2;
  // The block from which to start indexing.
  uint64 index_from_block = 3;
  // TODO: add chain id
}

message CreateApplicationRequest {
  string id = 1;
  uint64 index_from_block = 2;
}

message CreateApplicationResponse {
  Application application = 1;
}

message GetApplicationRequest {
  string id = 1;
}

message GetApplicationResponse {
  Application application = 1;
}

message ListApplicationRequest {
}

message ListApplicationResponse {
  repeated Application applications = 1;
}

message DeleteApplicationRequest {
  string id = 1;
}

message DeleteApplicationResponse {
  Application application = 1;
}

message BlockHeader {
  bytes hash = 1;
  optional bytes parent_hash = 2;
  uint64 number = 3;
  google.protobuf.Timestamp timestamp = 4;
}

message TopicValue {
  bytes value = 1;
}

message Event {
  bytes address = 1;
  uint64 block_index = 2;
  repeated TopicValue topics = 3;
  repeated TopicValue data = 4;
}

message ConnectApplication {
  string id = 1;
}

message ApplicationConnected {
  Application application = 1;
}

message AckBlock {
  bytes hash = 1;
}

message ConnectIndexerRequest {
  oneof message {
    ConnectApplication connect = 1;
    AckBlock ack = 3;
  }
}

message NewBlock {
  BlockHeader new_head = 1;
}

message Reorg {
  BlockHeader new_head = 1;
}

message NewEvents {
  bytes block_hash = 1;
  uint64 block_number = 2;
  repeated Event events = 3;
}

message ConnectIndexerResponse {
  oneof message {
    ApplicationConnected connected = 1;
    NewBlock new_block = 2;
    Reorg reorg = 3;
    NewEvents new_events = 4;
  }
}